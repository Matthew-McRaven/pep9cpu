// File: exer1207a.pepcpu
// Computer Systems, Fourth Edition
// Exercise 12.7(a)
// STBYTEA there,n
// RTL: byteOprnd <- A<8..15>
// Indirect addressing: Oprnd = Mem[Mem[OprndSpec]]
// Shortest known implementation: 12 cycles

UnitPre: IR=0xF200FF, Mem[0x00FF]=0x0105, A=0x00AB
UnitPre: N=1, Z=0, V=1, C=0, T1=0x0A // T1 stores NZVC=1010 in von Neumann step
UnitPost: Mem[0x0105]=0xAB, N=1, Z=0, V=1, C=0

// T3<high> <- Mem[OprndSpec], T2 <- OprndSpec + 1
1. A=9, B=10; MARCk
2. MemRead, A=10, B=23, AMux=1, ALU=1, CMux=1, C=13; CCk, LoadCk
3. MemRead, A=9, B=22, AMux=1, ALU=2, CMux=1, MDRMux=0, C=12; LoadCk, MDRCk
4. AMux=0, ALU=0, CMux=1, C=14; LoadCk

// T3<low> <- Mem[T2]
5. A=12, B=13; MARCk
6. MemRead
7. MemRead, MDRMux=0; MDRCk
8. AMux=0, ALU=0, CMux=1, C=15; LoadCk

// Mem[T3] <- A<low>, restore C in T1 from Fetch
9. A=14, B=15; MARCk
10. A=1, AMux=1, ALU=0, CMux=1, MDRMux=1; MDRCk
11. MemWrite
12. MemWrite, A=11, AMux=1, ALU=15; CCk
