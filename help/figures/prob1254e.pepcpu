// File: exer1207e.pepcpu
// Computer Systems, Fourth Edition
// Exercise 12.7(e)
// STBYTEA there,sx
// RTL: byteOprnd <- A<8..15>
// Stack-indexed addressing: Oprnd = Mem[SP + OprndSpec + X]
// Shortest known implementation: 8 cycles

UnitPre: IR=0xF600F1, SP=0x0008, X=0x0009, A=0x00AB
UnitPre: N=1, Z=0, V=1, C=0, T1=0x0A // T1 stores NZVC=1010 in von Neumann step
UnitPost: Mem[0x0102]=0xAB, N=1, Z=0, V=1, C=0

// T2 <- SP + OprnSpec
1. A=5, B=10, AMux=1, ALU=1, CMux=1, C=13; CCk, LoadCk 
2. A=4, B=9, AMux=1, ALU=2, CMux=1, C=12; LoadCk

// T3 <- T2 + X
3. A=3, B=13, AMux=1, ALU=1, CMux=1, C=15; CCk, LoadCk
4. A=2, B=12, AMux=1, ALU=2, CMux=1, C=14; LoadCk

// Mem[T3] <- A<low>, restore C in T1 from Fetch
5. A=1, AMux=1, ALU=0, CMux=1, MDRMux=1; MDRCk
6. A=14, B=15; MARCk
7. MemWrite
8. MemWrite, A=11, AMux=1, ALU=15; CCk
